// <auto-generated />
using System;
using Conversion.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Conversion.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210804014736_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Conversion.Domain.Entities.Currency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ccy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcyNm_EN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcyNm_RU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcyNm_UZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcyNm_UZC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Diff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Nominal")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Сurrencies");
                });

            modelBuilder.Entity("Conversion.Domain.Entities.Exchange", b =>
                {
                    b.Property<Guid>("ExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("IncomeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OutcomeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SourceCurrencyCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetCurrencyCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeId");

                    b.HasIndex("SourceCurrencyCurrencyId");

                    b.HasIndex("TargetCurrencyCurrencyId");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("Conversion.Domain.Entities.Exchange", b =>
                {
                    b.HasOne("Conversion.Domain.Entities.Currency", "SourceCurrency")
                        .WithMany()
                        .HasForeignKey("SourceCurrencyCurrencyId");

                    b.HasOne("Conversion.Domain.Entities.Currency", "TargetCurrency")
                        .WithMany()
                        .HasForeignKey("TargetCurrencyCurrencyId");

                    b.Navigation("SourceCurrency");

                    b.Navigation("TargetCurrency");
                });
#pragma warning restore 612, 618
        }
    }
}
